---
layout: post
title:  "Challenge-5 - Deploy the Front End and Backend"
date:   2019-03-18 20:09:02 +0530
categories: oracle cloud infrastructure
---

About this Challenge
---

This challenge is to verify your ability to 
* Setup the Wercker ENV Variables to actually deploy the Front End and Backend
* Commit Changes to the Readme Files and verify if the deployment gets updated on the Kubernetes Cluster
<!--more-->
![View](https://storage.googleapis.com/cdn.thenewstack.io/media/2017/11/07751442-deployment.png)
---


## Why this challenge:

<table>
<thead>
	<tr>
		<th>Milestones in Challenges</th>
		<th>Status</th>
	</tr>
</thead>
<tbody>
	<tr>
		<td>You setup the Deployment Environment ( OKE )</td>
		<td> ✔️ </td>
	</tr>
	<tr>
		<td>You moved the repos to the Development Environment ( DevCS )</td>
		<td> ✔️ </td>
	</tr>
	<tr>
		<td>You setup the CI/CD pipeline on Wercker / Oracle Container Pipeline</td>
		<td> ✔️ </td>
	</tr>
	<tr>
		<td>You prepared the k8s Cluster and installed MongoDB-HA</td>
		<td> ✔️ </td>
	</tr>
	<tr>
		<td>You Deployed the Front End and Backend End API</td>
		<td> You are Here</td>
	</tr>
	<tr>
		<td>You Setup Cluster Monitoring</td>
		<td>❌</td>
	</tr>
</tbody>
</table>

-------------------------

## How do I get started with this challenges
### Setup Pre-requisites
----
* Install Postman, a debugging tool that allows you to send API requests from your laptop
* Get started with [Postman](https://www.getpostman.com/downloads/) 

#### Setup Object Storage
----
* Oracle Cloud Infrastructure Object Storage is used to store all the Static Images uploaded via the application
* Get started with [Oracle Cloud Infrastructure Object Storage](https://docs.cloud.oracle.com/iaas/Content/Object/Concepts/objectstorageoverview.htm)


#### Create a PAR 
----
* A Pre-authenticated Request ( PAR ) allows you to bypass the cumbersome method of API Signing and authentication 
* Setup PAR for your bucket for both read and write access.
* Here's the [documentation](https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) that tells you how


#### Setup Wercker Env Variables
----
> Wercker ENV Variables need to be set for each Application

* The Wercker ENV Variables are used to abstract hardcoded values so the repos can be re-used in other environments
* The names of the ENV Variables are different for both repos, Bonus points for cleaning up these ambiguities
* There are some hardcoded values in the config.json of the front end repo , if you can add them as ENV Variables you get bonus points

<u>**Backend API Environment Variables**</u>

	APP_NAME=""
	OCIR_SECRET_NAME="" eg. Secret Name for pulling image from private registry
	CONTAINER_REGISTRY_USERNAME ="" 
	API_USER_TOKEN="" 
	PRIVATE_REGISTRY_PATH="" - eg. docker.io / 
	REPO_NAME="" 
	KUBE_ENDPOINT=""
	KUBE_USER=""
	KUBE_CONTEXT=""
	KUBE_USER_TOKEN=""
	KUBE_ENDPOINT_CERT_AUTH=""
	K8SNAMESPACE=""
	SLACK_URL=""
	SLACK_CHANNEL=""
	TENANCY_NAME=""
	JWT=""
	MONGO_URI=""

<u>**Frontend Environment Variables**</u>

	APP_NAME=""
	OCIR_SECRET_NAME="" eg. Secret Name for pulling image from private registry
	CONTAINER_REGISTRY_USERNAME ="" 
	API_USER_TOKEN="" 
	PRIVATE_REGISTRY_PATH="" - eg. docker.io / 
	REPO_NAME="" 
	KUBE_ENDPOINT=""
	KUBE_USER=""
	KUBE_CONTEXT=""
	KUBE_USER_TOKEN=""
	KUBE_ENDPOINT_CERT_AUTH=""
	K8SNAMESPACE=""
	SLACK_URL=""
	SLACK_CHANNEL=""
	TENANCY_NAME=""

### Deploy & Test Backend API
------
* Update Readme.md to trigger a build, it should pass through three phases in Wercker before `Kubernetes Deploy` gets invoked and the actual deployment happens

* Once the deployment is successful, you should be able to see `Pods`, `ReplicaSets`,`Deployments`, `Services`. 

        kubectl -n <YOUR NAMESPACE> get all

* The service exposes the Backend API via a Load Balancer , which gets automatically spun up in the OCI environment and the External IP would reflect. 

* Use Postman to Test the Backend API

#### Sample API Query

* Host URL would be the External IP of the Backend API
* To find the External IP, run the command 
        
        kubectl -n <YOUR NAMESPACE> get services
        
> POST {{hosturl}}/users/register

**<u>Parameters to be passed in the body</u>**

        username: vaishali.nankani
        password: Vaishali4390
        firstName:Vaishali
        lastName:Nankani
        designation:Cloud SE
        department:Oracle
        location:NA
        secret:NA
        room_no:100
        role:admin
        loginCount:0

### Deploy and Test Frontend API
* If the backend is functional and you get a positive response on postman, you are all set to deploy the front end. 

        1. Go to config.js
        2. Edit the API Server URL(*Load Balancer IP*)
        3. Object Storage URL ( Used to render Stored images in newsfeed - *Use the PAR URL* )
        4. Object Storage Read URL ( *Use the PAR URL* )

#### Deploy Frontend 
* Trigger a deployment once all these parametes have been set.
* The frontend is a react App that is heavy and takes a while to build and deploy, so get it right the first time to avoid iterative delays
* Once the deployment is done on Wercker run the following command

        kubectl -n <YOUR NAMESPACE> get services
        
* Get the frontend External IP which we will use to test if the homepage is loading.

----------------------

## What will we Verify here : 
* Have you successfully deployed the front end and the backend ?
* Test the backend URL and run sample API queries
* Open the frontend URL and check if the welcome page is loading
* Verify if all Pods are in running state and verify connectivity from within the cluster in MongoDB

## Submission Format: 
* A Write Up with 5 Bullet points not exceeding 50 words in each point, about the `learnings while **deploying the Front End , backend and debugging **` using `**Wercker**`. 
* Send your Email with 
  > `Subject Line: OCI Challenge-5` < Your Name > 
  > `Email Recepients:` [Vaishali](mailto:vaishali.nankani@oracle.com) && [Laksh](mailto:lakshmikanth.vasudevamurthy@oracle.com)

## Show me the tutorials 
* [Further Reading ](https://kubernetes.io/blog/2017/01/running-mongodb-on-kubernetes-with-statefulsets/)

